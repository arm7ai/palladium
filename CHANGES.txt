v1.2.3 - 2020-05-07
===================

- Updated requirements in order to use newer versions of dependencies
  (also fixing potential security vulnerabilities in dependencies)

- Added support for handling model attachments

- Exclamation mark `!` can now be used instead of `__factory__` in
  configuration files

v1.2.2.1 - 2019-09-30
=====================

- Added AWS S3 persister


v1.2.2 - 2019-08-15
===================

- Added default Palladium config file locations (to be checked if
  `PALLADIUM_CONFIG` is not set)

- Introduced `palladium.dataset.CSV` to replace `palladium.dataset.Table`

- `__copy__` configuration directive now accepts a `__default__`

- Updated requirements in order to use newer versions of dependencies
  (also fixing potential security vulnerabilities in dependencies)


v1.2.1.1 - 2018-12-13
=====================

- Added pld-export command to export a model from one model persister
  to another.

- Added a DatasetLoader for loading data from OpenML via scikit-learn.

- Added another R example that solves a regression problem and makes
  use of factor variables or categorical variables.

- Added Python 3.7 to Travis CI test settings, removed Python 3.5.

v1.2.0 - 2018-06-29
===================

- You can now run grid searches across a cluster of computers.  See
  the FAQ entry "Can I use my cluster to run a hyperparameter search?"
  for an example.

- PredictService now has better support for text predictions (which
  use 1d arrays of strings instead of 2d matrices as inputs) with the
  `unwrap_sample` option.

v1.2b1 - 2018-05-24
===================

- Update use of rpy2, no longer used deprecated pandas.rpy module.

- Save `model.cv_results_` in model's metadata if it exists.

- The best model of a grid search can now be persisted using the
  `--persist-best` flag.

- Grid search results can now be saved using the `--save-results`
  option.

- A `/activate` endpoint allows for activating a certain model version
  through the web.

- A `/refit` API endpoint that allows fitting a model to be triggered
  through the web.

- A new `/list` API endpoint that works similar to the pld-list CLI

- A `scoring` variable in the configuration root, if defined, will be
  used for both pld-test and pld-grid-search

- In CachedUpdatePersister don't load model if we already have active

- Allow for use of multiple CachedUpdatePersisters

  Instances of CachedUpdatePersister now use their own name inside the
  configuration file to index into `process_store`.  That is, a
  CachedUpdatePersister that's configured as `my_model_persister`
  inside the configuration file will have an entry in `process_store`
  with the key `my_model_persister`.  This is a breaking change, since
  the previously used key `model` is no longer available.

- Added a model persister for REST backends, e.g. for use with
  Artifactory.

- Added a `__copy__` directive to copy and override existing entries
  in configuration files. This can be used to avoid redundancy in one
  or multiple configuration files.

v1.1.0.1 - 2017-04-01
=====================

- Added MANIFEST.in to include VERSION file to distribution

v1.1.0 - 2017-03-27
===================

- Added multiple confuration file support, i.e., PALLADIUM_CONFIG can
  now point to a list of configuration files where the configuration
  dict is updated successively

- Added functionality to handle multiple predict service entry points

- Added support for nested lists in configuration

- Added `here` variable to be used in configuration pointing to the
  parent path of the current configuration file

- Added support for PluggableDecorators to DatasetLoaders
  ('load_data_decorators' in config)

- Added module to be used with WSGI servers initializing configuration
  without delay

- Added parameter for poolclass in sqlalchemy create_engine call in
  Database model persister. Default poolclass is set to None now to
  avoid DB connections being open for longer time periods

- Updated requirements in order to use newer versions of dependencies

- Added Python 3.6 to Travis CI test settings

- Changed deprecated sklearn.grid_search.GridSearchCV to current 
  sklearn.model_selection.GridSearchCV 


v1.0.1 - 2016-03-04
===================

- Updated requirements in order to use newer versions of dependencies

- Added information about virtual memory size (vms) to /alive entry
  point

- Added Python 3.5 to and removed Python 3.3 from Travis CI test
  settings


v1.0 - 2015-07-01
=================

- Added a streaming server (`pld-stream`) which listens to stdin,
  processes line by line, and returns predictions.

- Added support for batch processing through the web API.  You can now
  use a POST request to predict for a number of samples at once.
  (Please see section "Upgrading" in the docs for details about
  changes to the PredictService API.)

- Added support for selecting active model used for predictions.
  Previously, the latest trained model was used.  (Please see section
  "Upgrading" in the docs for details on how to upgrade model
  persisters (database or file) to the latest version.

- Added a new command `pld-admin` to activate and delete models.

- Added a new command `pld-dockerize` to create application specific
  docker images for Palladium-based services.  Previously, this used
  to be handled by a script in `addons/docker/palladium_app_image`.

- Added a ModelPersister for RDBMs that don't have BLOB.

- Documented scripts.

v0.9.1 - 2015-03-30
===================

- Added initial version of Palladium
  - Added scripts to fit, grid-search, test, and list models
  - Added script to provide model as web service
  - Added scripts to create Docker images of Palladium-based services
  - Added documentation and tutorial
  - Added Iris classification as sample application
  - Added examples how to integrate R and Julia models
  - Added information on how to setup Palladium with Mesos / Marathon
